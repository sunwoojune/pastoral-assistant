"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/ssr */ \"(app-pages-browser)/./node_modules/@supabase/ssr/dist/module/index.js\");\n\n// Mock 인증 시뮬레이터 (실제 Supabase 연동 전까지 사용)\nconst useMockAuth = \"true\" === 'true';\n// Mock 사용자 데이터\nconst mockUser = {\n    id: 'mock-user-id',\n    email: 'pastor@example.com',\n    user_metadata: {\n        full_name: '김목사',\n        church: '은혜교회'\n    }\n};\n// Mock 인증 함수들\nconst mockAuth = {\n    signUp: async (email, password, metadata)=>{\n        // 실제로는 validation 로직이 들어감\n        if (email && password.length >= 6) {\n            return {\n                data: {\n                    user: {\n                        ...mockUser,\n                        email\n                    }\n                },\n                error: null\n            };\n        }\n        return {\n            data: null,\n            error: {\n                message: '이메일과 비밀번호를 확인해주세요.'\n            }\n        };\n    },\n    signIn: async (email, password)=>{\n        // Mock에서는 localStorage에 저장된 사용자 확인\n        if (true) {\n            const storedUsers = localStorage.getItem('mock-registered-users');\n            const users = storedUsers ? JSON.parse(storedUsers) : [];\n            // 등록된 사용자인지 확인\n            const user = users.find((u)=>u.email === email && u.password === password);\n            if (user) {\n                return {\n                    data: {\n                        user: {\n                            ...user,\n                            password: undefined\n                        }\n                    },\n                    error: null\n                };\n            }\n        }\n        // 기본 Mock 로그인 (개발용)\n        if (email && password.length >= 6) {\n            return {\n                data: {\n                    user: {\n                        ...mockUser,\n                        email\n                    }\n                },\n                error: null\n            };\n        }\n        return {\n            data: null,\n            error: {\n                message: '로그인 정보가 올바르지 않습니다.'\n            }\n        };\n    },\n    signOut: async ()=>{\n        return {\n            error: null\n        };\n    },\n    getUser: async ()=>{\n        // localStorage에서 로그인 상태 확인\n        if (true) {\n            const isLoggedIn = localStorage.getItem('mock-logged-in') === 'true';\n            return {\n                data: {\n                    user: isLoggedIn ? mockUser : null\n                },\n                error: null\n            };\n        }\n        return {\n            data: {\n                user: null\n            },\n            error: null\n        };\n    }\n};\n// 실제 Supabase 클라이언트\nlet supabase = null;\nif (!useMockAuth) {\n    try {\n        const supabaseUrl = \"https://your-project.supabase.co\";\n        const supabaseKey = \"your-anon-key\";\n        if (supabaseUrl && supabaseKey) {\n            supabase = (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createBrowserClient)(supabaseUrl, supabaseKey);\n        } else {\n            console.warn('Supabase 환경변수가 설정되지 않음, Mock 모드로 전환됩니다.');\n        }\n    } catch (error) {\n        console.warn('Supabase 클라이언트 생성 실패, Mock 모드로 전환됩니다.');\n    }\n}\n// 통합 Auth 인터페이스\nconst auth = {\n    signUp: async (email, password, options)=>{\n        if (useMockAuth || !supabase) {\n            var _result_data;\n            const result = await mockAuth.signUp(email, password, options === null || options === void 0 ? void 0 : options.data);\n            if (((_result_data = result.data) === null || _result_data === void 0 ? void 0 : _result_data.user) && \"object\" !== 'undefined') {\n                localStorage.setItem('mock-logged-in', 'true');\n                localStorage.setItem('mock-user', JSON.stringify(result.data.user));\n            }\n            return result;\n        }\n        return supabase.auth.signUp({\n            email,\n            password,\n            options\n        });\n    },\n    signIn: async (email, password)=>{\n        if (useMockAuth || !supabase) {\n            var _result_data;\n            const result = await mockAuth.signIn(email, password);\n            if (((_result_data = result.data) === null || _result_data === void 0 ? void 0 : _result_data.user) && \"object\" !== 'undefined') {\n                localStorage.setItem('mock-logged-in', 'true');\n                localStorage.setItem('mock-user', JSON.stringify(result.data.user));\n            }\n            return result;\n        }\n        return supabase.auth.signInWithPassword({\n            email,\n            password\n        });\n    },\n    signOut: async ()=>{\n        if (useMockAuth || !supabase) {\n            if (true) {\n                localStorage.removeItem('mock-logged-in');\n                localStorage.removeItem('mock-user');\n            }\n            return mockAuth.signOut();\n        }\n        return supabase.auth.signOut();\n    },\n    getUser: async ()=>{\n        if (useMockAuth || !supabase) {\n            if (true) {\n                const isLoggedIn = localStorage.getItem('mock-logged-in') === 'true';\n                const userData = localStorage.getItem('mock-user');\n                const user = userData ? JSON.parse(userData) : null;\n                return {\n                    data: {\n                        user: isLoggedIn ? user : null\n                    },\n                    error: null\n                };\n            }\n            return {\n                data: {\n                    user: null\n                },\n                error: null\n            };\n        }\n        return supabase.auth.getUser();\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (supabase);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/supabase.ts\n"));

/***/ })

});